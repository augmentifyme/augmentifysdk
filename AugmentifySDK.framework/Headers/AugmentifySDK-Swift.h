#if TARGET_OS_SIMULATOR

#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef AUGMENTIFYSDK_SWIFT_H
#define AUGMENTIFYSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AugmentifySDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// Defines the sdks error protocol
/// <ul>
///   <li>
///     All methods are called on the main thread
///   </li>
/// </ul>
SWIFT_PROTOCOL("_TtP13AugmentifySDK23AugmentifyErrorDelegate_")
@protocol AugmentifyErrorDelegate
/// Called whenever an error is thrown
- (void)didReceiveError:(NSError * _Nonnull)error;
@end

@class NSNumber;
enum AugmentifySyncState : NSInteger;
@protocol AugmentifyStatusDelegate;
@class NSString;
@class NSError;
@class Experience;
@class UIViewController;
@protocol AugmentifyViewControllerProtocol;
@class NSURL;

SWIFT_CLASS("_TtC13AugmentifySDK20AugmentifySDKManager")
@interface AugmentifySDKManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AugmentifySDKManager * _Nonnull shared;)
+ (AugmentifySDKManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Defines if the device has at least iOS 10.0
@property (nonatomic, readonly) BOOL isSupported;
@property (nonatomic, readonly) enum AugmentifySyncState status;
/// Adds a delegate to receive errors
/// the delegate are not retained by the sdk. Make sure to retain te delgates yourself.
/// \param delegate The delegate to be added
///
- (void)addErrorDelegate:(id <AugmentifyErrorDelegate> _Nonnull)delegate;
/// Removes the given delegate
///
/// returns:
/// true if the given delegate has been removed
- (BOOL)removeErrorDelegate:(id <AugmentifyErrorDelegate> _Nonnull)delegate;
/// Adds a delegate to receive status updates
/// the delegate are not retained by the sdk. Make sure to retain te delgates yourself.
/// \param delegate The delegate to be added
///
- (void)addStatusDelegate:(id <AugmentifyStatusDelegate> _Nonnull)delegate;
/// Removes the given delegate
///
/// returns:
/// true if the given delegate has been removed
- (BOOL)removeStatusDelegate:(id <AugmentifyStatusDelegate> _Nonnull)delegate;
/// Initializes Augmentify with a particular sdk token and app token
/// \param appToken The app token that should be used.
///
/// \param secret The secret that should be used.
///
- (void)configureWithAppToken:(NSString * _Nonnull)appToken secret:(NSString * _Nonnull)secret;
/// Starts the SDK and runs all modules
/// Call this after configuring the sdk
- (void)start;
- (void)startWithCompletion:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Defines if the AugmentifySDK is ready to present the experiences in a UIViewController
@property (nonatomic, readonly) BOOL isReady;
/// Start an experience.
/// \param experience The experience to start.
///
- (UIViewController <AugmentifyViewControllerProtocol> * _Nullable)createAugmentifyViewControllerWithExperience:(Experience * _Nullable)experience SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=12.0);
/// Start an experience or interstitial from an universal link or URL-Scheme. For experiences iOS 12.0 or above is required.
/// \param url The universal link or URL-Scheme. Expects experience_id=code or interstitial_id=code in its querry.
///
/// \param success Called when all went well. Executed on main, the UIViewController contains the loaded experience or interstitial.
///
/// \param failure This block will be called when an error occured.
///
- (void)createAugmentifyViewControllerForUrl:(NSURL * _Nonnull)url success:(void (^ _Nonnull)(UIViewController <AugmentifyViewControllerProtocol> * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

/// Defines the current sdk validation
typedef SWIFT_ENUM(NSInteger, AugmentifySDKTokenValidation, open) {
/// the sdk has not started the validation yet
  AugmentifySDKTokenValidationNotValidated = 0,
/// the sdk validation succeeded
  AugmentifySDKTokenValidationValidated = 1,
/// the sdk validation failed
  AugmentifySDKTokenValidationValidationFailed = 2,
/// the validation is in progress
  AugmentifySDKTokenValidationValidationInProgress = 3,
};


SWIFT_PROTOCOL("_TtP13AugmentifySDK24AugmentifyStatusDelegate_")
@protocol AugmentifyStatusDelegate
- (void)syncChangedFromStateWithOldState:(enum AugmentifySyncState)oldState newState:(enum AugmentifySyncState)newState;
@end

typedef SWIFT_ENUM(NSInteger, AugmentifySyncState, open) {
  AugmentifySyncStateNotStarted = 0,
  AugmentifySyncStateError = 1,
  AugmentifySyncStateStarting = 2,
  AugmentifySyncStateAllLoaded = 3,
};

@class UIView;

/// Defines some customization for the ViewController
SWIFT_PROTOCOL("_TtP13AugmentifySDK32AugmentifyViewControllerProtocol_")
@protocol AugmentifyViewControllerProtocol
/// Set your own header.
/// The given view will be added above the camera layer.
/// Make sure to set the  <code>headerHeight</code>
@property (nonatomic, strong) UIView * _Nullable headerView;
/// Set the height of your header
@property (nonatomic) CGFloat headerHeight;
/// Convenience method for  <code>headerView</code> and <code>headerHeight</code>
- (void)setHeaderView:(UIView * _Nonnull)headerView withHeight:(CGFloat)withHeight;
@end


SWIFT_CLASS("_TtC13AugmentifySDK10Experience")
@interface Experience : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSURLSession;
@class NSURLSessionDownloadTask;
@class NSURLSessionTask;

@interface Experience (SWIFT_EXTENSION(AugmentifySDK)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
@end




@interface NSError (SWIFT_EXTENSION(AugmentifySDK))
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
@end










#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef AUGMENTIFYSDK_SWIFT_H
#define AUGMENTIFYSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AugmentifySDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// Defines the sdks error protocol
/// <ul>
///   <li>
///     All methods are called on the main thread
///   </li>
/// </ul>
SWIFT_PROTOCOL("_TtP13AugmentifySDK23AugmentifyErrorDelegate_")
@protocol AugmentifyErrorDelegate
/// Called whenever an error is thrown
- (void)didReceiveError:(NSError * _Nonnull)error;
@end

@class NSNumber;
enum AugmentifySyncState : NSInteger;
@protocol AugmentifyStatusDelegate;
@class NSString;
@class NSError;
@class Experience;
@class UIViewController;
@protocol AugmentifyViewControllerProtocol;
@class NSURL;

SWIFT_CLASS("_TtC13AugmentifySDK20AugmentifySDKManager")
@interface AugmentifySDKManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AugmentifySDKManager * _Nonnull shared;)
+ (AugmentifySDKManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Defines if the device has at least iOS 10.0
@property (nonatomic, readonly) BOOL isSupported;
@property (nonatomic, readonly) enum AugmentifySyncState status;
/// Adds a delegate to receive errors
/// the delegate are not retained by the sdk. Make sure to retain te delgates yourself.
/// \param delegate The delegate to be added
///
- (void)addErrorDelegate:(id <AugmentifyErrorDelegate> _Nonnull)delegate;
/// Removes the given delegate
///
/// returns:
/// true if the given delegate has been removed
- (BOOL)removeErrorDelegate:(id <AugmentifyErrorDelegate> _Nonnull)delegate;
/// Adds a delegate to receive status updates
/// the delegate are not retained by the sdk. Make sure to retain te delgates yourself.
/// \param delegate The delegate to be added
///
- (void)addStatusDelegate:(id <AugmentifyStatusDelegate> _Nonnull)delegate;
/// Removes the given delegate
///
/// returns:
/// true if the given delegate has been removed
- (BOOL)removeStatusDelegate:(id <AugmentifyStatusDelegate> _Nonnull)delegate;
/// Initializes Augmentify with a particular sdk token and app token
/// \param appToken The app token that should be used.
///
/// \param secret The secret that should be used.
///
- (void)configureWithAppToken:(NSString * _Nonnull)appToken secret:(NSString * _Nonnull)secret;
/// Starts the SDK and runs all modules
/// Call this after configuring the sdk
- (void)start;
- (void)startWithCompletion:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Defines if the AugmentifySDK is ready to present the experiences in a UIViewController
@property (nonatomic, readonly) BOOL isReady;
/// Start an experience.
/// \param experience The experience to start.
///
- (UIViewController <AugmentifyViewControllerProtocol> * _Nullable)createAugmentifyViewControllerWithExperience:(Experience * _Nullable)experience SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=12.0);
/// Start an experience or interstitial from an universal link or URL-Scheme. For experiences iOS 12.0 or above is required.
/// \param url The universal link or URL-Scheme. Expects experience_id=code or interstitial_id=code in its querry.
///
/// \param success Called when all went well. Executed on main, the UIViewController contains the loaded experience or interstitial.
///
/// \param failure This block will be called when an error occured.
///
- (void)createAugmentifyViewControllerForUrl:(NSURL * _Nonnull)url success:(void (^ _Nonnull)(UIViewController <AugmentifyViewControllerProtocol> * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

/// Defines the current sdk validation
typedef SWIFT_ENUM(NSInteger, AugmentifySDKTokenValidation, open) {
/// the sdk has not started the validation yet
  AugmentifySDKTokenValidationNotValidated = 0,
/// the sdk validation succeeded
  AugmentifySDKTokenValidationValidated = 1,
/// the sdk validation failed
  AugmentifySDKTokenValidationValidationFailed = 2,
/// the validation is in progress
  AugmentifySDKTokenValidationValidationInProgress = 3,
};


SWIFT_PROTOCOL("_TtP13AugmentifySDK24AugmentifyStatusDelegate_")
@protocol AugmentifyStatusDelegate
- (void)syncChangedFromStateWithOldState:(enum AugmentifySyncState)oldState newState:(enum AugmentifySyncState)newState;
@end

typedef SWIFT_ENUM(NSInteger, AugmentifySyncState, open) {
  AugmentifySyncStateNotStarted = 0,
  AugmentifySyncStateError = 1,
  AugmentifySyncStateStarting = 2,
  AugmentifySyncStateAllLoaded = 3,
};

@class UIView;

/// Defines some customization for the ViewController
SWIFT_PROTOCOL("_TtP13AugmentifySDK32AugmentifyViewControllerProtocol_")
@protocol AugmentifyViewControllerProtocol
/// Set your own header.
/// The given view will be added above the camera layer.
/// Make sure to set the  <code>headerHeight</code>
@property (nonatomic, strong) UIView * _Nullable headerView;
/// Set the height of your header
@property (nonatomic) CGFloat headerHeight;
/// Convenience method for  <code>headerView</code> and <code>headerHeight</code>
- (void)setHeaderView:(UIView * _Nonnull)headerView withHeight:(CGFloat)withHeight;
@end


SWIFT_CLASS("_TtC13AugmentifySDK10Experience")
@interface Experience : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSURLSession;
@class NSURLSessionDownloadTask;
@class NSURLSessionTask;

@interface Experience (SWIFT_EXTENSION(AugmentifySDK)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
@end




@interface NSError (SWIFT_EXTENSION(AugmentifySDK))
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
@end










#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef AUGMENTIFYSDK_SWIFT_H
#define AUGMENTIFYSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AugmentifySDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// Defines the sdks error protocol
/// <ul>
///   <li>
///     All methods are called on the main thread
///   </li>
/// </ul>
SWIFT_PROTOCOL("_TtP13AugmentifySDK23AugmentifyErrorDelegate_")
@protocol AugmentifyErrorDelegate
/// Called whenever an error is thrown
- (void)didReceiveError:(NSError * _Nonnull)error;
@end

@class NSNumber;
enum AugmentifySyncState : NSInteger;
@protocol AugmentifyStatusDelegate;
@class NSString;
@class NSError;
@class Experience;
@class UIViewController;
@protocol AugmentifyViewControllerProtocol;
@class NSURL;

SWIFT_CLASS("_TtC13AugmentifySDK20AugmentifySDKManager")
@interface AugmentifySDKManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AugmentifySDKManager * _Nonnull shared;)
+ (AugmentifySDKManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Defines if the device has at least iOS 10.0
@property (nonatomic, readonly) BOOL isSupported;
@property (nonatomic, readonly) enum AugmentifySyncState status;
/// Adds a delegate to receive errors
/// the delegate are not retained by the sdk. Make sure to retain te delgates yourself.
/// \param delegate The delegate to be added
///
- (void)addErrorDelegate:(id <AugmentifyErrorDelegate> _Nonnull)delegate;
/// Removes the given delegate
///
/// returns:
/// true if the given delegate has been removed
- (BOOL)removeErrorDelegate:(id <AugmentifyErrorDelegate> _Nonnull)delegate;
/// Adds a delegate to receive status updates
/// the delegate are not retained by the sdk. Make sure to retain te delgates yourself.
/// \param delegate The delegate to be added
///
- (void)addStatusDelegate:(id <AugmentifyStatusDelegate> _Nonnull)delegate;
/// Removes the given delegate
///
/// returns:
/// true if the given delegate has been removed
- (BOOL)removeStatusDelegate:(id <AugmentifyStatusDelegate> _Nonnull)delegate;
/// Initializes Augmentify with a particular sdk token and app token
/// \param appToken The app token that should be used.
///
/// \param secret The secret that should be used.
///
- (void)configureWithAppToken:(NSString * _Nonnull)appToken secret:(NSString * _Nonnull)secret;
/// Starts the SDK and runs all modules
/// Call this after configuring the sdk
- (void)start;
- (void)startWithCompletion:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Defines if the AugmentifySDK is ready to present the experiences in a UIViewController
@property (nonatomic, readonly) BOOL isReady;
/// Start an experience.
/// \param experience The experience to start.
///
- (UIViewController <AugmentifyViewControllerProtocol> * _Nullable)createAugmentifyViewControllerWithExperience:(Experience * _Nullable)experience SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=12.0);
/// Start an experience or interstitial from an universal link or URL-Scheme. For experiences iOS 12.0 or above is required.
/// \param url The universal link or URL-Scheme. Expects experience_id=code or interstitial_id=code in its querry.
///
/// \param success Called when all went well. Executed on main, the UIViewController contains the loaded experience or interstitial.
///
/// \param failure This block will be called when an error occured.
///
- (void)createAugmentifyViewControllerForUrl:(NSURL * _Nonnull)url success:(void (^ _Nonnull)(UIViewController <AugmentifyViewControllerProtocol> * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

/// Defines the current sdk validation
typedef SWIFT_ENUM(NSInteger, AugmentifySDKTokenValidation, open) {
/// the sdk has not started the validation yet
  AugmentifySDKTokenValidationNotValidated = 0,
/// the sdk validation succeeded
  AugmentifySDKTokenValidationValidated = 1,
/// the sdk validation failed
  AugmentifySDKTokenValidationValidationFailed = 2,
/// the validation is in progress
  AugmentifySDKTokenValidationValidationInProgress = 3,
};


SWIFT_PROTOCOL("_TtP13AugmentifySDK24AugmentifyStatusDelegate_")
@protocol AugmentifyStatusDelegate
- (void)syncChangedFromStateWithOldState:(enum AugmentifySyncState)oldState newState:(enum AugmentifySyncState)newState;
@end

typedef SWIFT_ENUM(NSInteger, AugmentifySyncState, open) {
  AugmentifySyncStateNotStarted = 0,
  AugmentifySyncStateError = 1,
  AugmentifySyncStateStarting = 2,
  AugmentifySyncStateAllLoaded = 3,
};

@class UIView;

/// Defines some customization for the ViewController
SWIFT_PROTOCOL("_TtP13AugmentifySDK32AugmentifyViewControllerProtocol_")
@protocol AugmentifyViewControllerProtocol
/// Set your own header.
/// The given view will be added above the camera layer.
/// Make sure to set the  <code>headerHeight</code>
@property (nonatomic, strong) UIView * _Nullable headerView;
/// Set the height of your header
@property (nonatomic) CGFloat headerHeight;
/// Convenience method for  <code>headerView</code> and <code>headerHeight</code>
- (void)setHeaderView:(UIView * _Nonnull)headerView withHeight:(CGFloat)withHeight;
@end


SWIFT_CLASS("_TtC13AugmentifySDK10Experience")
@interface Experience : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSURLSession;
@class NSURLSessionDownloadTask;
@class NSURLSessionTask;

@interface Experience (SWIFT_EXTENSION(AugmentifySDK)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
@end




@interface NSError (SWIFT_EXTENSION(AugmentifySDK))
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
@end










#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
#else

#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef AUGMENTIFYSDK_SWIFT_H
#define AUGMENTIFYSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AugmentifySDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// Defines the sdks error protocol
/// <ul>
///   <li>
///     All methods are called on the main thread
///   </li>
/// </ul>
SWIFT_PROTOCOL("_TtP13AugmentifySDK23AugmentifyErrorDelegate_")
@protocol AugmentifyErrorDelegate
/// Called whenever an error is thrown
- (void)didReceiveError:(NSError * _Nonnull)error;
@end

@class NSNumber;
enum AugmentifySyncState : NSInteger;
@protocol AugmentifyStatusDelegate;
@class NSString;
@class NSError;
@class Experience;
@class UIViewController;
@protocol AugmentifyViewControllerProtocol;
@class NSURL;

SWIFT_CLASS("_TtC13AugmentifySDK20AugmentifySDKManager")
@interface AugmentifySDKManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AugmentifySDKManager * _Nonnull shared;)
+ (AugmentifySDKManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Defines if the device has at least iOS 10.0
@property (nonatomic, readonly) BOOL isSupported;
@property (nonatomic, readonly) enum AugmentifySyncState status;
/// Adds a delegate to receive errors
/// the delegate are not retained by the sdk. Make sure to retain te delgates yourself.
/// \param delegate The delegate to be added
///
- (void)addErrorDelegate:(id <AugmentifyErrorDelegate> _Nonnull)delegate;
/// Removes the given delegate
///
/// returns:
/// true if the given delegate has been removed
- (BOOL)removeErrorDelegate:(id <AugmentifyErrorDelegate> _Nonnull)delegate;
/// Adds a delegate to receive status updates
/// the delegate are not retained by the sdk. Make sure to retain te delgates yourself.
/// \param delegate The delegate to be added
///
- (void)addStatusDelegate:(id <AugmentifyStatusDelegate> _Nonnull)delegate;
/// Removes the given delegate
///
/// returns:
/// true if the given delegate has been removed
- (BOOL)removeStatusDelegate:(id <AugmentifyStatusDelegate> _Nonnull)delegate;
/// Initializes Augmentify with a particular sdk token and app token
/// \param appToken The app token that should be used.
///
/// \param secret The secret that should be used.
///
- (void)configureWithAppToken:(NSString * _Nonnull)appToken secret:(NSString * _Nonnull)secret;
/// Starts the SDK and runs all modules
/// Call this after configuring the sdk
- (void)start;
- (void)startWithCompletion:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Defines if the AugmentifySDK is ready to present the experiences in a UIViewController
@property (nonatomic, readonly) BOOL isReady;
/// Start an experience.
/// \param experience The experience to start.
///
- (UIViewController <AugmentifyViewControllerProtocol> * _Nullable)createAugmentifyViewControllerWithExperience:(Experience * _Nullable)experience SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=12.0);
/// Start an experience or interstitial from an universal link or URL-Scheme. For experiences iOS 12.0 or above is required.
/// \param url The universal link or URL-Scheme. Expects experience_id=code or interstitial_id=code in its querry.
///
/// \param success Called when all went well. Executed on main, the UIViewController contains the loaded experience or interstitial.
///
/// \param failure This block will be called when an error occured.
///
- (void)createAugmentifyViewControllerForUrl:(NSURL * _Nonnull)url success:(void (^ _Nonnull)(UIViewController <AugmentifyViewControllerProtocol> * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

/// Defines the current sdk validation
typedef SWIFT_ENUM(NSInteger, AugmentifySDKTokenValidation, open) {
/// the sdk has not started the validation yet
  AugmentifySDKTokenValidationNotValidated = 0,
/// the sdk validation succeeded
  AugmentifySDKTokenValidationValidated = 1,
/// the sdk validation failed
  AugmentifySDKTokenValidationValidationFailed = 2,
/// the validation is in progress
  AugmentifySDKTokenValidationValidationInProgress = 3,
};


SWIFT_PROTOCOL("_TtP13AugmentifySDK24AugmentifyStatusDelegate_")
@protocol AugmentifyStatusDelegate
- (void)syncChangedFromStateWithOldState:(enum AugmentifySyncState)oldState newState:(enum AugmentifySyncState)newState;
@end

typedef SWIFT_ENUM(NSInteger, AugmentifySyncState, open) {
  AugmentifySyncStateNotStarted = 0,
  AugmentifySyncStateError = 1,
  AugmentifySyncStateStarting = 2,
  AugmentifySyncStateAllLoaded = 3,
};

@class UIView;

/// Defines some customization for the ViewController
SWIFT_PROTOCOL("_TtP13AugmentifySDK32AugmentifyViewControllerProtocol_")
@protocol AugmentifyViewControllerProtocol
/// Set your own header.
/// The given view will be added above the camera layer.
/// Make sure to set the  <code>headerHeight</code>
@property (nonatomic, strong) UIView * _Nullable headerView;
/// Set the height of your header
@property (nonatomic) CGFloat headerHeight;
/// Convenience method for  <code>headerView</code> and <code>headerHeight</code>
- (void)setHeaderView:(UIView * _Nonnull)headerView withHeight:(CGFloat)withHeight;
@end


SWIFT_CLASS("_TtC13AugmentifySDK10Experience")
@interface Experience : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSURLSession;
@class NSURLSessionDownloadTask;
@class NSURLSessionTask;

@interface Experience (SWIFT_EXTENSION(AugmentifySDK)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
@end




@interface NSError (SWIFT_EXTENSION(AugmentifySDK))
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
@end










#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef AUGMENTIFYSDK_SWIFT_H
#define AUGMENTIFYSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AugmentifySDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// Defines the sdks error protocol
/// <ul>
///   <li>
///     All methods are called on the main thread
///   </li>
/// </ul>
SWIFT_PROTOCOL("_TtP13AugmentifySDK23AugmentifyErrorDelegate_")
@protocol AugmentifyErrorDelegate
/// Called whenever an error is thrown
- (void)didReceiveError:(NSError * _Nonnull)error;
@end

@class NSNumber;
enum AugmentifySyncState : NSInteger;
@protocol AugmentifyStatusDelegate;
@class NSString;
@class NSError;
@class Experience;
@class UIViewController;
@protocol AugmentifyViewControllerProtocol;
@class NSURL;

SWIFT_CLASS("_TtC13AugmentifySDK20AugmentifySDKManager")
@interface AugmentifySDKManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AugmentifySDKManager * _Nonnull shared;)
+ (AugmentifySDKManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Defines if the device has at least iOS 10.0
@property (nonatomic, readonly) BOOL isSupported;
@property (nonatomic, readonly) enum AugmentifySyncState status;
/// Adds a delegate to receive errors
/// the delegate are not retained by the sdk. Make sure to retain te delgates yourself.
/// \param delegate The delegate to be added
///
- (void)addErrorDelegate:(id <AugmentifyErrorDelegate> _Nonnull)delegate;
/// Removes the given delegate
///
/// returns:
/// true if the given delegate has been removed
- (BOOL)removeErrorDelegate:(id <AugmentifyErrorDelegate> _Nonnull)delegate;
/// Adds a delegate to receive status updates
/// the delegate are not retained by the sdk. Make sure to retain te delgates yourself.
/// \param delegate The delegate to be added
///
- (void)addStatusDelegate:(id <AugmentifyStatusDelegate> _Nonnull)delegate;
/// Removes the given delegate
///
/// returns:
/// true if the given delegate has been removed
- (BOOL)removeStatusDelegate:(id <AugmentifyStatusDelegate> _Nonnull)delegate;
/// Initializes Augmentify with a particular sdk token and app token
/// \param appToken The app token that should be used.
///
/// \param secret The secret that should be used.
///
- (void)configureWithAppToken:(NSString * _Nonnull)appToken secret:(NSString * _Nonnull)secret;
/// Starts the SDK and runs all modules
/// Call this after configuring the sdk
- (void)start;
- (void)startWithCompletion:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Defines if the AugmentifySDK is ready to present the experiences in a UIViewController
@property (nonatomic, readonly) BOOL isReady;
/// Start an experience.
/// \param experience The experience to start.
///
- (UIViewController <AugmentifyViewControllerProtocol> * _Nullable)createAugmentifyViewControllerWithExperience:(Experience * _Nullable)experience SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=12.0);
/// Start an experience or interstitial from an universal link or URL-Scheme. For experiences iOS 12.0 or above is required.
/// \param url The universal link or URL-Scheme. Expects experience_id=code or interstitial_id=code in its querry.
///
/// \param success Called when all went well. Executed on main, the UIViewController contains the loaded experience or interstitial.
///
/// \param failure This block will be called when an error occured.
///
- (void)createAugmentifyViewControllerForUrl:(NSURL * _Nonnull)url success:(void (^ _Nonnull)(UIViewController <AugmentifyViewControllerProtocol> * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

/// Defines the current sdk validation
typedef SWIFT_ENUM(NSInteger, AugmentifySDKTokenValidation, open) {
/// the sdk has not started the validation yet
  AugmentifySDKTokenValidationNotValidated = 0,
/// the sdk validation succeeded
  AugmentifySDKTokenValidationValidated = 1,
/// the sdk validation failed
  AugmentifySDKTokenValidationValidationFailed = 2,
/// the validation is in progress
  AugmentifySDKTokenValidationValidationInProgress = 3,
};


SWIFT_PROTOCOL("_TtP13AugmentifySDK24AugmentifyStatusDelegate_")
@protocol AugmentifyStatusDelegate
- (void)syncChangedFromStateWithOldState:(enum AugmentifySyncState)oldState newState:(enum AugmentifySyncState)newState;
@end

typedef SWIFT_ENUM(NSInteger, AugmentifySyncState, open) {
  AugmentifySyncStateNotStarted = 0,
  AugmentifySyncStateError = 1,
  AugmentifySyncStateStarting = 2,
  AugmentifySyncStateAllLoaded = 3,
};

@class UIView;

/// Defines some customization for the ViewController
SWIFT_PROTOCOL("_TtP13AugmentifySDK32AugmentifyViewControllerProtocol_")
@protocol AugmentifyViewControllerProtocol
/// Set your own header.
/// The given view will be added above the camera layer.
/// Make sure to set the  <code>headerHeight</code>
@property (nonatomic, strong) UIView * _Nullable headerView;
/// Set the height of your header
@property (nonatomic) CGFloat headerHeight;
/// Convenience method for  <code>headerView</code> and <code>headerHeight</code>
- (void)setHeaderView:(UIView * _Nonnull)headerView withHeight:(CGFloat)withHeight;
@end


SWIFT_CLASS("_TtC13AugmentifySDK10Experience")
@interface Experience : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSURLSession;
@class NSURLSessionDownloadTask;
@class NSURLSessionTask;

@interface Experience (SWIFT_EXTENSION(AugmentifySDK)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
@end




@interface NSError (SWIFT_EXTENSION(AugmentifySDK))
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
@end










#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
#endif
